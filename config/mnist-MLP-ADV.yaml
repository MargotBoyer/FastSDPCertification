data :
  name : "mnist"
  path : "data/datasets/mnist_subset_10_per_class.pth"
  num_classes : 10
  num_samples : 100

epsilon : 0.1

network :
  name : "MLP-ADV"
  path : "data/models/mnist_adv_MLP-ADV.pt"
  K : 4
  n : 
    - 784
    - 200
    - 100
    - 50
    - 10

models :
  # # SDP-IP
  # - certification_model_name : "LanSDP"
  #   # cuts : 
  #   # - "RLT"
  #   # - "triangularization"
  #   # RLT_props : 
  #   # - 0.1
  #   # - 0.2
  #   all_combinations_cuts : false
  #   MATRIX_BY_LAYERS: false
  #   LAST_LAYER: false
  #   use_fusion: false  # Whether to use the fusion API for MOSEK
  #   use_callback : false # Whether to use the callback for MOSEK
  #   use_active_neurons: true # Whether to use active neurons in the certification problem as variables
  #   use_inactive_neurons : true # Whether to use inactive neurons in the certification problem as variables
  #   bounds_method: "alpha-CROWN"  # Method to compute bounds, options: "IBP", "GREAT_BOUNDS", "GREAT_BOUNDS_LIN"

  # # SDP-Layer
  # - certification_model_name : "LanSDP"
  #   cuts : 
  #   # - "RLT"
  #   - "triangularization"
  #   # RLT_props : 
  #   # - 0.1
  #   # - 0.2
  #   all_combinations_cuts : false
  #   MATRIX_BY_LAYERS: true
  #   LAST_LAYER: false
  #   use_fusion: false  # Whether to use the fusion API for MOSEK
  #   use_callback : false # Whether to use the callback for MOSEK
  #   use_active_neurons: true # Whether to use active neurons in the certification problem as variables
  #   use_inactive_neurons : false # Whether to use inactive neurons in the certification problem as variables
  #   bounds_method: "alpha-CROWN"  # Method to compute bounds, options: "IBP", "GREAT_BOUNDS", "GREAT_BOUNDS_LIN"


  # SDPt
  - certification_model_name : "LanSDP"
    cuts : 
    - "RLT"
    - "triangularization"
    RLT_props : 
    - 0.1
    - 0.2
    all_combinations_cuts : false
    MATRIX_BY_LAYERS: true
    LAST_LAYER: false
    use_fusion: false  # Whether to use the fusion API for MOSEK
    use_callback : false # Whether to use the callback for MOSEK
    use_active_neurons: false # Whether to use active neurons in the certification problem as variables
    keep_penultimate_actives : true # Whether to keep the penultimate layer active neurons in the certification problem
    use_inactive_neurons : false # Whether to use inactive neurons in the certification problem as variables
    bounds_method: "alpha-CROWN"  # Method to compute bounds, options: "IBP", "GREAT_BOUNDS", "GREAT_BOUNDS_LIN"


  # - certification_model_name : "MdSDP"
  #   cuts : 
  #   - "RLT"
  #   - "triangularization"
  #   - "Tij"
  #   - "beta_logits_comparaison_1"
  #   - "beta_logits_comparaison_2"
  #   - "McC_betaz_logits"
  #   - "Tij_before_penultimate_layer"
  #   RLT_props : 
  #   - 0.1
  #   - 0.2
  #   all_combinations_cuts : false
  #   MATRIX_BY_LAYERS: true
  #   LAST_LAYER: false
  #   use_fusion: false  # Whether to use the fusion API for MOSEK
  #   use_callback : false # Whether to use the callback for MOSEK
  #   use_active_neurons: true # Whether to use active neurons in the certification problem as variables
  #   use_inactive_neurons : false # Whether to use inactive neurons in the certification problem as variables
  #   keep_penultimate_actives : true # Whether to keep the penultimate layer active neurons in the certification problem
  #   bounds_method: "alpha-CROWN"  # Method to compute bounds, options: "IBP", "GREAT_BOUNDS", "GREAT_BOUNDS_LIN"
  #   alpha_1: 0.5
  #   alpha_2: 0.5


